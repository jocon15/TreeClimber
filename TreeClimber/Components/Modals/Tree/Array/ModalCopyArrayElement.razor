@inject IJSRuntime JSRuntime
@inject JSONFileDataService jsonFileDataService
@inject IToastService toastService

<div class="modal fade show" id="copyModal" style="display:block; background-color: rgba(10,10,10,.8);" aria-modal="true" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header dark">
                <h4 class="modal-title">Copy Array Element</h4>
                <button type="button" class="modal-close-btn" @onclick="@ModalCancel">&#10005;</button>
            </div>
            <div class="modal-body dark">
                <h5 class="form-element-title">Index to Copy: </h5>
                <div>
                    <input type="number" class="text-input short-box" @bind=@_indexToCopy />
                </div>
            </div>
            <ConditionalModalErrorMessage ErrorMessage=@_errorMessage />
            <div class="modal-footer dark">
                <button type="button" class="add-btn" @onclick="@ModalCopyElement">Copy</button>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string Path { get; set; }

    [Parameter]
    public EventCallback OnClose { get; set; }

    private int _indexToCopy;

    private string _errorMessage = "";

    private Task ModalCancel() => OnClose.InvokeAsync();

    private async Task ModalCopyElement()
    {
        Tuple<int, string, JToken?> result = jsonFileDataService.GetArrayElement(Path, _indexToCopy);

        if (result.Item1 != ResponseUtil.OK)
        {
            _errorMessage = result.Item2;
            // reload modal but don't close it
            StateHasChanged();
            return;
        }

        // copy the json string to clipboard
        await CopyTextToClipboard(result.Item3.ToString());

        toastService.ShowInfo($"Copied array element from path: {JSONFileDataService.BuildArrayPathWithIndex(Path, _indexToCopy)}");

        await OnClose.InvokeAsync();
    }

    private async Task CopyTextToClipboard(string text)
    {
        // reminder this js function is implemented in Pages/_Host.cshtml
        await JSRuntime.InvokeVoidAsync("clipboardCopy.copyText", text);
    }
}