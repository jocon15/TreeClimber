@inject JSONFileDataService jsonFileDataService
@inject IToastService toastService

<div class="modal fade show" id="addModal" style="display:block; background-color: rgba(10,10,10,.8);" aria-modal="true" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header dark">
                <h4 class="modal-title">Delete Array Element</h4>
                <button type="button" class="modal-close-btn" @onclick=@ModalCancel>&#10005;</button>
            </div>
            <div class="modal-body dark">
                <div>
                    <h5 class="form-element-title">Index to Delete: </h5>
                    <div>
                        <input type="number" class="text-input short-box" @bind=@_indexToDelete />
                    </div>
                </div>
            </div>
            <ConditionalModalErrorMessage ErrorMessage=@_errorMessage />
            <div class="modal-footer dark">
                <button type="button" class="remove-btn" @onclick=@ModalDeleteElement>Delete</button>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string? Path { get; set; }

    [Parameter]
    public EventCallback OnClose { get; set; }

    private int _indexToDelete;

    private string _errorMessage = "";

    private Task ModalCancel() => OnClose.InvokeAsync();

    private Task ModalDeleteElement()
    {
        Tuple<int, string> result = jsonFileDataService.DeleteArrayElement(Path, _indexToDelete);

        if (result.Item1 != ResponseUtil.OK)
        {
            _errorMessage = result.Item2;
            // reload modal but don't close it
            StateHasChanged();
            return Task.CompletedTask;
        }

        toastService.ShowInfo($"Removed array element to path: {JSONFileDataService.BuildArrayPathWithIndex(Path, _indexToDelete)}");

        return OnClose.InvokeAsync();
    }
}